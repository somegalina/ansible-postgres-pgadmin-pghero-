---
- hosts: 127.0.0.1
  connection: local
  become: yes

  vars_files:
    - vars.yml

  pre_tasks:
    - name: "Install packages"
      apt: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server

    - name: "Install packages"
      apt : "name={{ item }} state=present"
      with_items:
        - python3-psycopg2
  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: "Add some dummy data to our database"
      become: true
      become_user: postgres
      shell: psql {{ db_name }} < /tmp/dump.sql

	- name: Set up PGAdmin key and repo
      shell: | 
        curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add
        sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
	     
    - name: Install PGAdmin
      apt: name=pgadmin4 state:latest

    - name: Execute script for PgAdmin
	  shell: sudo /usr/pgadmin4/bin/setup-web.sh
	  
	- name: Enable Apache port for  PGAdmin
	  shell: sudo ufw allow 'Apache'
	  
	- name: Enable firewall on OS
	  shell: sudo ufw allow ssh
	   
    - name: Set up PGHero key and repo
      shell: |
        wget -qO- https://dl.packager.io/srv/pghero/pghero/key | sudo apt-key add -
        sudo wget -O /etc/apt/sources.list.d/pghero.list https://dl.packager.io/srv/pghero/pghero/master/installer/ubuntu/$(. /etc/os-release && echo $VERSION_ID).repo

    - name: Install PGHero
      apt: name=pgadmin4 state:latest

    - name: PGHero configuration 
      shell: |
	    sudo pghero config:set DATABASE_URL=postgres://{{ db_user }}:{{ db_password }}@localhost:5432/{{ db_name }}
	    sudo pghero config:set PORT=3001
        sudo pghero config:set RAILS_LOG_TO_STDOUT=disabled
        sudo pghero scale web=1
		
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - pghero
	  
    - name: Open port for PGHero 
      shell: sudo ufw allow 3001/tcp
	  
  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted 
